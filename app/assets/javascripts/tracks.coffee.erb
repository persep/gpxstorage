prepareAddons = (parent) ->
  $('.remove-addon:not([data-ready="true"])', parent)
      .attr('data-ready', true)
      .click ->
          $(@).closest('.gpx-track-item').remove();
          return;

  return;

document.addEventListener 'turbolinks:load', ->
  form = $('form[data-type="track"]');
  return unless form.length > 0;

  $btn = $('.gpx-file-select', form);
  $panel = $('.track-items-drop-here', form);
  $uploading = 0;
  $uploaded = $('.gpx-track-item', form).length;
  prepareAddons form;

  $btn.click ->
    $('#track_items_files').click() unless $(@).is('.active');
    false;

  $('#track_items_files').change ->
    $btn.addClass('active');
    $panel.addClass('active');

    checkState = ->
      if $uploading <= 0
        $btn.removeClass('active');
        $panel.removeClass('active');

      return;

    for file in @.files
      unless file.size <= <%= Rails.application.config.max_attach_size %>
        checkState();
        continue;

      $.ajax "/tracks/#{$panel.data('code')}/upload",
        type: 'PUT'
        data: file
        contentType: 'application/octet-stream'
        cache: false
        processData: false
        error: GpxSupport.showErrorStatus;

        success: ( (result) ->
          html = $(result);
          form = $btn.closest('form');

          $('input', html).removeAttr('id')
          $('input[type="text"]', html).attr('name', "track[track_items][#{$uploaded}][name]").val(@);
          $('input[type="hidden"]', html).attr('name', "track[track_items][#{$uploaded}][code]");
          $uploaded++;

          $btn.before html;
          prepareAddons form;

          return;
        ).bind(file.name);

        complete: ->
          $uploading--;
          checkState();

          return;

        xhr: ->
          xhr = $.ajaxSettings.xhr();
          xhr.onloadstart = -> $uploading++;
          xhr;

    $(@).val('');
    return;

  return;